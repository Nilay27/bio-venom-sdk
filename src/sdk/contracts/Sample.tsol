pragma ever-solidity >= 0.61.0;
pragma AbiHeader expire;
pragma AbiHeader pubkey;
import "locklift/src/console.tsol";



contract Sample {
    uint16 static _nonce;

    uint state;

    event StateChange(uint _state);

    constructor(uint _state) public {
        tvm.accept();
        state = _state;
    }

    function setState(uint _state  ) public {
        tvm.accept();
        console.log(format("setState called with _state {} ", _state));
        state = _state;
        // address std = address.makeAddrStd(0,0xe19dd0365f8d6d8d0c9c9d8f05b873427b7d517d1adb87005b286c7ce0df9240);
        // TvmCell payload = tvm.encodeBody(Sample(std).setState, _state, _arbitData);
        // std.transfer({value: 0, bounce: false, flag: 128, body: payload});
        emit StateChange(_state);
    }

    function getDetails()
        external
        view
    returns (
        uint
    ) {
        return state;
    }
}
