pragma ever-solidity >= 0.61.2;
pragma AbiHeader expire;
pragma AbiHeader pubkey;


contract Sample {
    uint16 static _nonce;

    uint state;
    uint tvmPubkey;
    uint msgPubkey;

    event StateChange(uint _state);

    constructor(uint _state) public {
        tvm.accept();
        setState(_state);
    }

    function setState(uint _state) public {
        tvm.accept();
        state = _state;
        tvmPubkey = tvm.pubkey();
        msgPubkey = msg.pubkey();
        emit StateChange(_state);
    }

    function getDetails()
        external
        view
    returns (uint _state, uint _tvmPubkey, uint _msgPubkey)
    {
        return (state, tvmPubkey, msgPubkey);
    }

    function checkSignature(uint256 hash, TvmCell signature, uint256 pubkey) public pure{
        TvmSlice signatureSlice = signature.toSlice();
        bool signatureIsValid = tvm.checkSign(hash, signatureSlice, pubkey);
        require(signatureIsValid, 101);
    }
}
